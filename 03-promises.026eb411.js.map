{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA8BA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAYtC,OAXgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,aAAUC,IAGpBM,EAAO,C,SAAEP,E,aAAUC,GAAe,GAEnCA,EAAa,G,CAtCPQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBACN,MACEC,UAAUC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cACV,IAAIC,EAAeC,OAAOL,EAAMM,OAEhC,IAAK,IAAIC,EAAW,EAAGA,EAAWL,EAAOI,MAAOC,GAAY,EAC1DvB,EAAcuB,EAAUH,GACrBI,MAAK,EAACvB,SAAEA,EAAQC,aAAEA,MACjBuB,EAAA3B,GAAS4B,OAAOC,QACd,uBAAqB1B,QAAiBC,OAEjC,C,SAAED,E,aAAUC,MAEpB0B,OAAM,EAAC3B,SAAEA,EAAQC,aAAEA,MAClBuB,EAAA3B,GAAS4B,OAAOG,QACd,sBAAoB5B,QAAeC,MAAiB,IAG1DkB,GAAgBC,OAAOJ,EAAKK,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', handelSubmit);\n\nfunction handelSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  let delayCounter = Number(delay.value);\n\n  for (let position = 0; position < amount.value; position += 1) {\n    createPromise(position, delayCounter)\n      .then(({ position, delayCounter }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delayCounter}ms`\n        );\n        return { position, delayCounter };\n      })\n      .catch(({ position, delayCounter }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delayCounter}ms`\n        );\n      });\n    delayCounter += Number(step.value);\n  }\n}\n\nfunction createPromise(position, delayCounter) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delayCounter });\n        // Fulfill\n      } else {\n        reject({ position, delayCounter }); // Reject\n      }\n    }, delayCounter);\n  });\n\n  return promise;\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delayCounter","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","elements","delay","step","amount","currentTarget","delayCounter1","Number","value","position1","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.026eb411.js.map"}